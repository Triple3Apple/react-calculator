{"version":3,"sources":["components/ThemeSelector.js","components/Header.js","components/CalcDisplay.js","components/Button.js","components/CalcButtons.js","components/Footer.js","img/1280px-React-icon.png","components/SmallInfoDiv.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeSelector","onThemeChange","currTheme","className","onClick","style","opacity","Header","id","CalcDisplay","displayText","Button","text","wideButtonType","onButtonClick","CalcButtons","onDisplayTextChange","useState","inputType","inputVal","setNumber","calcDisplayText","setCalcDisplayText","doButtonActions","console","log","symbolPassed","isCharSymbol","length","modifiedDisplayText","substring","resetCalcDisplay","origText","solution","performCalculations","wasLastCharSymbol","Number","toString","charWasSymbol","char","charAt","isSymbol","calcString","numbers","split","symbols","filter","element","numbersAndSymbols","symbolIndex","i","symbol","useEffect","Footer","href","target","rel","SmallInfoDiv","src","reactLogo","alt","width","height","App","theme","setTheme","calcText","setCalcText","num","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffdb2993.chunk.js","sourcesContent":["const ThemeSelector = ({ onThemeChange, currTheme }) => {\r\n  return (\r\n    <div className=\"theme-selector\">\r\n      <h3 className={`theme-text ${\"normal-text-theme\" + currTheme}`}>THEME</h3>\r\n      <div className=\"selector-container\">\r\n        <div className={`numbers ${\"normal-text-theme\" + currTheme}`}>\r\n          <h3>1</h3>\r\n          <h3>2</h3>\r\n          <h3>3</h3>\r\n        </div>\r\n        <div className={`selector ${\"calc-buttons-theme\" + currTheme}`}>\r\n          <div\r\n            className=\"theme-selection theme-selection1\"\r\n            onClick={() => onThemeChange(1)}\r\n            style={{ opacity: `${currTheme === 1 ? \"100\" : \"0\"}` }}\r\n          ></div>\r\n          <div\r\n            className=\"theme-selection theme-selection2\"\r\n            onClick={() => onThemeChange(2)}\r\n            style={{ opacity: `${currTheme === 2 ? \"100\" : \"0\"}` }}\r\n          ></div>\r\n          <div\r\n            className=\"theme-selection theme-selection3\"\r\n            onClick={() => onThemeChange(3)}\r\n            style={{ opacity: `${currTheme === 3 ? \"100\" : \"0\"}` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeSelector;\r\n","import ThemeSelector from \"./ThemeSelector\";\r\n\r\nconst Header = ({ onThemeChange, currTheme }) => {\r\n  return (\r\n    <header className=\"header-container\">\r\n      <h1 id=\"app-name\" className={\"normal-text-theme\" + currTheme}>\r\n        calc\r\n      </h1>\r\n      <ThemeSelector\r\n        onThemeChange={onThemeChange}\r\n        currTheme={currTheme}\r\n      ></ThemeSelector>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst CalcDisplay = ({ currTheme, displayText }) => {\r\n  return (\r\n    <div className={`calc-display ${\"calc-display-theme\" + currTheme}`}>\r\n      <h4 id=\"display\" className={`${\"normal-text-theme\" + currTheme}`}>\r\n        {displayText}\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalcDisplay;\r\n","import { useState } from \"react\";\r\n\r\nconst Button = ({\r\n  text,\r\n  wideButtonType,\r\n  currTheme,\r\n  // onDisplayTextChange,\r\n  onButtonClick,\r\n}) => {\r\n  // gridColumnStart: {1}, gridColumnEnd: 4\r\n\r\n  // const [currTheme, setCurrTheme] = useState('btn-theme' + currTheme);\r\n\r\n  // const getButtonWithTheme = () => {\r\n  //   if (currTheme > 3 || currTheme < 1) console.error(`Incorrect currTheme passed, value: ${currTheme}`);\r\n\r\n  //   setCurrTheme('btn-theme' + currTheme);\r\n\r\n  // }\r\n\r\n  // const doButtonClickActions = (text) => {\r\n  //   // doButtonClickActions(text);\r\n  //   onButtonClick(text);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {wideButtonType === 1 ? (\r\n        <div\r\n          onClick={() => onButtonClick(text)}\r\n          className={`button two-grid-button1 ${`dif-color-theme${currTheme}-key1`} \r\n          }`}\r\n        >\r\n          <p>{text}</p>\r\n        </div>\r\n      ) : wideButtonType === 2 ? (\r\n        <div\r\n          onClick={() => onButtonClick(text)}\r\n          className={`button two-grid-button2 ${`dif-color-theme${currTheme}-key2`} \r\n          }`}\r\n        >\r\n          <p>{text}</p>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          onClick={() => onButtonClick(text)}\r\n          className={`button ${\r\n            currTheme === 1\r\n              ? \"normal-btn-text-theme1\"\r\n              : \"normal-text-theme\" + currTheme\r\n          } ${\r\n            text === \"DEL\"\r\n              ? `white-text ${`dif-color-theme${currTheme}-key1`}`\r\n              : \"\"\r\n          } ${\"btn-theme\" + currTheme}`}\r\n        >\r\n          <p>{text}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n\r\n    // <div className=\"button\" {btnWidth === 2 ? \"two-grid-button\" : \"\"}>\r\n    //   <p>{text}</p>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst CalcButtons = ({ currTheme, onDisplayTextChange }) => {\r\n  const [commands, setCommands] = useState([\r\n    {\r\n      inputType: 1,\r\n      inputVal: 0,\r\n    },\r\n  ]);\r\n\r\n  // Holds the current number (will be used for checking if decimal point already included in number)\r\n  const [number, setNumber] = useState(\"0\");\r\n\r\n  // Holds the text to be displayed on calc display\r\n  const [calcDisplayText, setCalcDisplayText] = useState(\"0\");\r\n\r\n  // this function called when a symbol is pressed\r\n  // const addCommands = (command) => {};\r\n\r\n  // const changeNumber = (digit) => {\r\n  //   let digitVal = Number(digit);\r\n  //   let numberVal = Number(number);\r\n\r\n  //   if (numberVal === 0 && digitVal === 0) {\r\n  //     console.log(\"1\");\r\n  //     setNumber(0);\r\n  //     // } else if (numberVal === 0) {\r\n  //     //   console.log(\"2\");\r\n  //     //   setNumber(0);\r\n  //   } else {\r\n  //     console.log(\"3\");\r\n  //     if (number.toString() === \"0\") {\r\n  //       setNumber(digit);\r\n  //     } else {\r\n  //       setNumber(number.toString() + digit.toString());\r\n  //     }\r\n  //   }\r\n\r\n  //   console.log(`Number is: ${number}`);\r\n\r\n  //   // onDisplayTextChange(number);\r\n  // };\r\n\r\n  // TESTING ------------------------------------------------------------------------------------------------\r\n  const doButtonActions = (text) => {\r\n    console.log(\"doButtonActions called\");\r\n    //TODO:  Do validation on input to see if input was correct (e.g. 2..2 is invalid, 2+/4 is invalid).\r\n\r\n    // Check if text is a symbol\r\n    let symbolPassed = false;\r\n    symbolPassed = isCharSymbol(text);\r\n\r\n    // Check if text is a command (e.g. DEL, RESET, =)\r\n    switch (text) {\r\n      case \"DEL\":\r\n        if (calcDisplayText.length > 0) {\r\n          // modify the current number stored\r\n          let modifiedDisplayText = calcDisplayText.substring(\r\n            0,\r\n            calcDisplayText.length - 1\r\n          );\r\n          setNumber(modifiedDisplayText);\r\n          return setCalcDisplayText(modifiedDisplayText);\r\n        }\r\n        break;\r\n      case \"RESET\":\r\n        return resetCalcDisplay();\r\n      case \"=\":\r\n        let origText = calcDisplayText;\r\n        let solution = performCalculations(calcDisplayText);\r\n        if (solution === origText) return; // Do nothing because the method did not calculate anything\r\n        setNumber(solution);\r\n        return setCalcDisplayText(solution);\r\n      default:\r\n        // Do nothing, not a command.\r\n        break;\r\n    }\r\n\r\n    // Check for double symbols\r\n    let lastCharWasSymbol = wasLastCharSymbol(calcDisplayText);\r\n    if (lastCharWasSymbol && symbolPassed === true) return; // Do nothing. (e.g. '/+' is not valid, so keep it at '/')\r\n\r\n    // Check if 0 and symbol\r\n    if (Number(calcDisplayText) === 0 && symbolPassed) return; // Do nothing.\r\n\r\n    // Check if 0 was entered when the display was already zero\r\n    if (calcDisplayText === \"0\" && text === \"0\") return; // Do nothing.\r\n\r\n    // calc text is valued at zero then use the char entered\r\n    if (Number(calcDisplayText) === 0) return setCalcDisplayText(text);\r\n\r\n    console.log(\"updated display text\");\r\n    // Display the text entered by the user.\r\n    setCalcDisplayText(calcDisplayText.toString() + text.toString());\r\n\r\n    // reset number use state if symbol was passed\r\n    // TODO: Adjust when solution is given, maybe reset when = is pressed??\r\n    if (symbolPassed) setNumber(\"0\");\r\n  };\r\n\r\n  //---------------------------------------------------------------------------------------------------------\r\n\r\n  // Determines whether last char was a symbol\r\n  const wasLastCharSymbol = (text) => {\r\n    let charWasSymbol = false;\r\n\r\n    if (text.length > 0) {\r\n      let char = text.charAt(text.length - 1);\r\n\r\n      charWasSymbol = isCharSymbol(char);\r\n    }\r\n\r\n    return charWasSymbol;\r\n  };\r\n\r\n  const isCharSymbol = (char) => {\r\n    let isSymbol = false;\r\n    switch (char) {\r\n      case \"+\":\r\n        isSymbol = true;\r\n        break;\r\n      case \"-\":\r\n        isSymbol = true;\r\n        break;\r\n      case \"x\":\r\n        isSymbol = true;\r\n        break;\r\n      case \"/\":\r\n        isSymbol = true;\r\n        break;\r\n      default:\r\n        // Do nothing since it is not a symbol\r\n        break;\r\n    }\r\n\r\n    return isSymbol;\r\n  };\r\n\r\n  const performCalculations = (calcString) => {\r\n    let solution = 0;\r\n    let numbers = calcString.split(/[+-/x]/);\r\n    let symbols = calcString.split(/[1234567890.\\s]+/);\r\n    symbols = symbols.filter((element) => element); // removing empty elements\r\n\r\n    let numbersAndSymbols = calcString.split(/((?:^-)?[0-9\\.]+)/g);\r\n    numbersAndSymbols = numbersAndSymbols.filter((element) => element); // removing empty elements\r\n    console.log(numbers);\r\n    console.log(symbols);\r\n    console.log(numbersAndSymbols);\r\n\r\n    // Error checking (e.g. \"2 +\" is invalid ).\r\n    if (numbersAndSymbols.length < 3) return calcString;\r\n\r\n    let symbolIndex = 0;\r\n    solution = Number(numbersAndSymbols[0]);\r\n    for (let i = 0; i < numbersAndSymbols.length; i++) {\r\n      console.log(\"inside for looooop\");\r\n      // let symbol;\r\n      if (i % 2 === 0) {\r\n        // Number\r\n        console.log(`number: ${numbersAndSymbols[i]}`);\r\n        if (i >= 2) {\r\n          // do actual calculation with 2 numbers\r\n          let symbol = symbols[symbolIndex];\r\n          switch (symbol) {\r\n            case \"+\":\r\n              solution = solution + Number(numbersAndSymbols[i]);\r\n              console.log(`Adding ${solution} + ${numbersAndSymbols[i]}`);\r\n              break;\r\n            case \"-\":\r\n              solution = solution - Number(numbersAndSymbols[i]);\r\n              console.log(`Subtracting ${solution} - ${numbersAndSymbols[i]}`);\r\n              break;\r\n            case \"x\":\r\n              solution = solution * Number(numbersAndSymbols[i]);\r\n              break;\r\n            case \"/\":\r\n              solution = solution / Number(numbersAndSymbols[i]);\r\n              break;\r\n\r\n            default:\r\n              console.log(`default reached: ${symbol}`);\r\n              break;\r\n          }\r\n          symbolIndex++;\r\n        }\r\n      } else {\r\n        // Symbol\r\n        console.log(`symbol: ${numbersAndSymbols[i]}`);\r\n        // symbol = numbersAndSymbols[i];\r\n      }\r\n    }\r\n\r\n    console.log(`Solution = ${solution}`);\r\n    return solution;\r\n  };\r\n\r\n  // Reset calculator display text\r\n  const resetCalcDisplay = () => {\r\n    setCalcDisplayText(\"0\");\r\n    setNumber(\"0\");\r\n  };\r\n\r\n  const doSymbolActions = (symbol) => {\r\n    switch (symbol) {\r\n      case \"+\":\r\n        setCalcDisplayText(calcDisplayText + \"\" + symbol);\r\n        break;\r\n\r\n      default:\r\n        console.warn(`weird symbol received: ${symbol}`);\r\n    }\r\n\r\n    // reset number state\r\n  };\r\n\r\n  // IMPORTANT: Used to run code on initial render AND on every render (when a state changes)\r\n  /* \r\n  useEffect(() => {\r\n    onDisplayTextChange(number);\r\n    console.log(\"useEffect called\");\r\n  });\r\n  */\r\n\r\n  // The use effect below runs on the initial render AND when the number state changes\r\n\r\n  // useEffect(() => {\r\n  //   // update display text state\r\n  //   setCalcDisplayText(number);\r\n\r\n  //   console.log(\"useEffect for number called\");\r\n  // }, [number]);\r\n\r\n  // runs when display text changes\r\n  useEffect(() => {\r\n    // update the actual calculator text in the display\r\n    onDisplayTextChange(calcDisplayText);\r\n\r\n    console.log(\"useEffect for displayText called!!!!!!\");\r\n  }, [calcDisplayText]);\r\n\r\n  // Reset number function?\r\n\r\n  return (\r\n    <div className={`calc-buttons ${\"calc-buttons-theme\" + currTheme}`}>\r\n      <Button\r\n        text={7}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text={8}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text={9}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text=\"DEL\"\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text={4}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text={5}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text={6}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text=\"+\"\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text={1}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text={2}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text={3}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text=\"-\"\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text=\".\"\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text={0}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text=\"/\"\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text=\"x\"\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text=\"RESET\"\r\n        wideButtonType={1}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n      <Button\r\n        text=\"=\"\r\n        wideButtonType={2}\r\n        currTheme={currTheme}\r\n        onDisplayTextChange={onDisplayTextChange}\r\n        onButtonClick={doButtonActions}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalcButtons;\r\n","const Footer = () => {\r\n  return (\r\n    <div className=\"attribution\">\r\n      <p>\r\n        Challenge by&nbsp;\r\n        <a\r\n          href=\"https://www.frontendmentor.io?ref=challenge\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Frontend Mentor\r\n        </a>\r\n        . Coded by&nbsp;\r\n        <a\r\n          href=\"https://www.abrarakhand.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Abrar Akhand\r\n        </a>\r\n        .\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/1280px-React-icon.73ac128a.png\";","import React from 'react'\r\nimport reactLogo from '../img/1280px-React-icon.png'\r\n\r\nconst SmallInfoDiv = ({ currTheme }) => {\r\n    return (\r\n        <div className={`react-info-div ${\"calc-buttons-theme\" + currTheme} ${\"normal-text-theme\" + currTheme} ${\"react-info-div-theme\" + currTheme}`}>\r\n            <a href=\"https://reactjs.org/\" target='_blank' rel='noreferrer'><img src={reactLogo} alt=\"text\" width='90px' height='60px' /></a>\r\n\r\n            {/* <div className=\"react-logo-img\"></div> */}\r\n            <h4>Made with React</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SmallInfoDiv\r\n","import { useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport CalcDisplay from \"./components/CalcDisplay\";\nimport CalcButtons from \"./components/CalcButtons\";\nimport Footer from \"./components/Footer\";\nimport SmallInfoDiv from \"./components/SmallInfoDiv\";\n\nfunction App() {\n  // TODO: Load last used theme\n  const [theme, setTheme] = useState(1);\n\n  const [calcText, setCalcText] = useState(\"0\");\n\n  const changeTheme = (num) => {\n    if (num < 1 || num > 3) return;\n    console.log(`received theme num: ${num}`);\n\n    setTheme(num);\n  };\n\n  const changeCalcText = (text) => {\n    console.log(`obtained text: ${text}`);\n\n    setCalcText(text);\n  };\n\n  // className={`button two-grid-button1 white-text dif-color-key1 ${'btn-theme' + themeNum}`}\n  return (\n    <div className={`calc-root ${\"calc-root-theme\" + theme}`}>\n      <SmallInfoDiv currTheme={theme}></SmallInfoDiv>\n      <div className=\"calculator-container\">\n        <Header onThemeChange={changeTheme} currTheme={theme}></Header>\n        <CalcDisplay currTheme={theme} displayText={calcText}></CalcDisplay>\n        <CalcButtons\n          currTheme={theme}\n          onDisplayTextChange={changeCalcText}\n        ></CalcButtons>\n      </div>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable'\n\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}